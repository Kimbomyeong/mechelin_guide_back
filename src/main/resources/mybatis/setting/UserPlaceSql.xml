<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="userplace">
	<!-- insert -->
	<insert id="insertOfUserPlace" parameterType="updto">
		INSERT INTO user_place (user_id, place_id, category, created_at, updated_at) 
		VALUES (#{user_id}, #{place_id}, #{category}, now(), now()) 
	</insert>
	<!-- user_id와 place_id를 가지고 있는 데이터가 있는지 확인 -->
	<select id="selectCheckOfUserPlace" resultType="Integer" parameterType="HashMap">
		SELECT id FROM user_place WHERE user_id = #{user_id} AND place_id = #{place_id}
	</select>
	<!-- user_id가 가장 최근에 insert한 데이터를 반환하는 SQL문 -->
	<select id="selectLatelyOfUserPlace" resultType="updto" parameterType="int">
		SELECT * FROM user_place WHERE user_id = #{user_id} ORDER BY created_at DESC LIMIT 1
	</select>
	<!-- post_count 칼럼 1 증가시키는 SQL 문 -->
	<update id="updatePlusOfUserPlace" parameterType="int">
		UPDATE user_place SET post_count = post_count + 1 WHERE id = #{id}
	</update>
	<!-- post_count 칼럼 1 감소시키는 SQL 문 -->
	<update id="updateMinusOfUserPlace" parameterType="int">
		UPDATE user_place SET post_count = post_count - 1 WHERE id = #{id}
	</update>
	<!-- 지도에서 해당 맛집 표시를 키고 끄게하는 필터 기능 SQL 문 -->
	<!-- 무조건 true 값으로 보내야함 이거말고 true false 인값을 그대로 대입하는 방법도있음 -->
	<update id="updateIsShowOfUserPlace" parameterType="HashMap">
		UPDATE user_place SET isshow = IF(#{isshow} = 1, isshow = 0, isshow = 1) WHERE id = #{id}
	</update>
	<!-- user_place의 id로 place의 id 값 반환 -->
	<select id="selectPlaceIdOfUserPlace" resultType="int" parameterType="int">
		SELECT place_id FROM user_place WHERE id = #{id}
	</select>
	<!-- 나의 맛집 총 갯수 반환 -->
	<select id="selectCountMyPlace" parameterType="int" resultType="int">
		SELECT COUNT(*) from user_place WHERE user_id = #{user_id} AND isshow = true; 
	</select>
	<!-- 나의 맛집 리스트 -->
	<select id="selectMyPlaceOfUserPlace" parameterType="HashMap" resultType="ptdto">
		SELECT post.front_image, 
			up.id as user_place_id, up.post_count,	
			pl.name, pl.address, pl.latitude_x, pl.longitude_y,	pl.id AS place_id
		FROM user_place AS up 
		JOIN place AS pl
			ON up.place_id = pl.id
		JOIN post
			ON pl.id = post.user_place_id
		WHERE up.user_id = #{user_id} AND up.isshow = true
		GROUP BY pl.id LIMIT #{pageStart}, #{perPageNum};
	</select>
	<!-- 블랙리스트로 변경 -->
	<!-- 블랙리스트를 하고싶으면 1을 넣고 
	블랙리스트를 취소하고 싶으면 0을 넣고 SQL문 변수에 보내주면 됨-->
	<update id="updateBlacklistOfUserPlace" parameterType="HashMap">
		UPDATE user_place SET blacklist = IF(#{blacklist} = 1,  0, 1) WHERE id = #{user_place_id}
	</update>
	
	<!-- 블랙리스트인지 아닌지 확인하는 SQL -->
	<select id="selectIsBlackList" parameterType="int" resultType="int">
		SELECT blacklist FROM user_place WHERE id = #{user_place_id}
	</select>
	<!-- 삭제를 한 맛집인지 isshow가 false인 맛집인지 -->
	<select id="selectIsShowOfUserPlace" resultType="int" parameterType="HashMap">
		SELECT isshow FROM user_place WHERE user_id = #{user_id} AND place_id = #{place_id}
	</select>
	
</mapper>